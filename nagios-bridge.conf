
# These are the details of the gmond or gmetad XML service
# The gmetad daemon listens on two ports, one of which provides
# immediate output like gmond, that is the port that
# must be specified here (default is 8651)
gmetad_host = '127.0.0.1'
gmetad_port = 8651

# This overrides the DMAX attribute from all metrics in all hosts
# If DMAX > 0 and TN > DMAX, then a metric state is considered
# UNKNOWN and Nagios will potentially send an alert
force_dmax = 0

# Every collection group in gmond.conf defines a time_threshold
# This value appears as TMAX in the XML.
# The gmond process should normally send every metric again before
# the value timer TN > TMAX.
# If ganglia-nagios-bridge is polling a gmond collector
# then a very small tmax_grace period (perhaps 5 seconds) is used.
# If ganglia-nagios-bridge is polling a gmetad server then
# tmax_grace should be set higher than the polling interval configured
# in gmetad.
tmax_grace = 30

# Ganglia XML typically contains FQDNs for all hosts, as it obtains
# the hostnames using reverse DNS lookups.  Nagios, on the other hand,
# is often configured with just the hostname and no domain.  Setting
# strip_domains = True will ensure that the domain part is stripped from
# the hostname before passing it to Nagios.
strip_domains = True

# This is the directory where Nagios expects to read checkresults
# submitted in batch
nagios_result_dir = '/var/lib/nagios3/spool/checkresults'

# Alternatively, you can use the external command pipe to pass on the results
#
# NOTE: that currently nagios_result_dir must be None if command_pipe is set.
# NOTE: if you are using icinga2, in 2.4.1 you must use the command_pipe method
# 	as the result_dir method is buggy: https://dev.icinga.org/issues/10768
command_pipe = None
# command_pipe = '/var/run/icinga2/cmd/icinga2.cmd'

# This is where we select the metrics that we want to map from
# Ganglia to Nagios service names
# Any metric not matched in the configuration will be ignored and
# not passed to Nagios.
# It is permitted to use regular expressions for the cluster name,
# host name or metric name matching
# In the 'service_name' attribute of a metric, it is permitted to
# use positional placeholders to refer to groups matched in the
# metric name regex
clusters = [
    ('.*',   # cluster name
        [    # list of hosts to match in the cluster(s)
            ('.*',    # host name
                [     # list of metrics to match for the host(s)
                    (r'proc_total',   # metric name
                        {    # attributes for this metric:
                            'service_name': r'Total processes',
                            #'crit_below': 0,
                            #'warn_below': 0,
                            'warn_above': 120,
                            'crit_above': 150
                        }
                    ),
                    (
                        r'load_(\w+)',  # Using wildcard to match all load avgs
                        { 'service_name': r'Load avg \1 minute', 'warn_above': 5, 'crit_above': 10 })
                ]
            )
        ]
    ),
    ('SomeCluster',
        [
        ]
  )
]

